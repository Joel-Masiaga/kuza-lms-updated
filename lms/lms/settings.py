"""
Django settings for lms project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import dj_database_url
import os
from dotenv import load_dotenv


load_dotenv()

ENVIRONMENT = os.getenv('ENVIRONMENT', default='production')

GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")  

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
if ENVIRONMENT == 'development':
    DEBUG = True
else:
    DEBUG = False 


ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cloudinary_storage',
    'cloudinary',
    'home',
    'chatboat',
    'courses',
    'users',
    'testimonials',
    'quiz', 
    'instructor',
    'crispy_forms',
    'crispy_bootstrap5',
    'crispy_tailwind',
    'bootstrap5',
    'ckeditor',
    'ckeditor_uploader', 
    'tinymce',
    'django_bootstrap5',

    'theme',
    'django_browser_reload',

    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google'
    
]

TAILWIND_APP_NAME = 'theme'

INTERNAL_IPS = [
    
    "127.0.0.1",
]

NPM_BIN_PATH = "C:/Program Files/nodejs/npm.cmd"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'users.middleware.ProfileCompletionMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django_browser_reload.middleware.BrowserReloadMiddleware',
]

ROOT_URLCONF = 'lms.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        "DIRS": [BASE_DIR / "templates"], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'users.context_processors.subscription_context',
            ],
        },
    },
]


WSGI_APPLICATION = 'lms.wsgi.application'

SITE_ID = 1 

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

POSTGRES_LOCALLY = True
if ENVIRONMENT == 'production' or POSTGRES_LOCALLY == True:
    DATABASES['default'] = dj_database_url.parse(os.getenv('DATABASE_URL'), conn_max_age=600)


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

import os

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') 
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

if ENVIRONMENT == 'production' or POSTGRES_LOCALLY == True:
    DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
else:
    MEDIA_URL = '/media/'

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': os.getenv('CLOUDINARY_CLOUD_NAME'),
    'API_KEY': os.getenv('CLOUDINARY_API_KEY'),
    'API_SECRET': os.getenv('CLOUDINARY_API_SECRET')
}


CKEDITOR_UPLOAD_PATH = "uploads/"

ALLOWED_HOSTS = ['*']

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.User'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'users.backends.EmailBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]

# SOCIAL ACCOUNTS PROVIDERS
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE' : [
            'profile',
            'email'
        ],
        'APP': {
            'client_id': os.getenv('GOOGLE_AUTH_CLIENT_ID'),
            'secret': os.getenv('GOOGLE_AUTH_SECRET')
        },
        'AUTH_PARAMS': {
            'access_type':'online',
        },
                # Add these settings
        'OAUTH_PKCE_ENABLED': True,
        'MOBILE_FLOW_ENABLED': True,
    }
}

# Configure django-allauth to use email instead of username
ACCOUNT_AUTHENTICATION_METHOD = "email"
ACCOUNT_USERNAME_REQUIRED = False  # Disable username requirement
ACCOUNT_EMAIL_REQUIRED = True  # Require email
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USER_MODEL_USERNAME_FIELD = 'email'
ACCOUNT_EMAIL_VERIFICATION = "optional"
SOCIALACCOUNT_AUTO_SIGNUP = True 



CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"
CRISPY_TEMPLATE_PACK = "tailwind"

LOGIN_REDIRECT_URL = '/'
MOBILE_LOGIN_REDIRECT_URL = '/'
LOGIN_URL = 'login'
LOGOUT_REDIRECT_URL = 'login'


TINYMCE_DEFAULT_CONFIG = {
    'height': 800,
    'menubar': True,
    'plugins': (
        'advlist autolink lists link image charmap preview hr anchor pagebreak '
        'searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime '
        'media table emoticons help autosave codesample toc '
        'print save directionality template paste textpattern '
        'nonbreaking visualblocks insertdatetime quickbars '
        'charmap spellchecker mathjax ' 
        'table cell row column contextmenu autosave '
        'blockquote anchorposition colorpicker draganddrop '
        'codefolding linktooltip textalign imagebrowser '
        'imagegallery codemirror fontawesome spellcheckasyougo '
        'pagebreaks socialmedia dropimage mergetables '
        'wordpaste audio embedmedia imagelist fullscreenpreview emoticonsfont '
        'highlightjs insertmedia mediaquery datalist superscript '
        'tabletools advancedlist typographytools docsizer toolbarcontext '
        'accordion flipcard button chessboard'
    ),
    'toolbar': (
        'undo redo | fontselect fontsizeselect formatselect | '
        'bold italic underline strikethrough | forecolor backcolor removeformat | '
        'alignleft aligncenter alignright alignjustify | '
        'bullist numlist outdent indent | blockquote subscript superscript | '
        'table tabledelete | '
        'link image media codesample pageembed | insertdatetime charmap emoticons | '
        'preview fullscreen print | spellchecker | '
        'ltr rtl | template | code | diagram | accordion | flipcard | button | chessboard'
    ),
    'branding': False,
    'contextmenu': 'link image table | insertdatetime | paste | removeformat | copy | cut | paste',
    'content_css': [
        'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css',
        'https://cdn.jsdelivr.net/npm/katex@0.13.11/dist/katex.min.css',
        'https://cdnjs.cloudflare.com/ajax/libs/mermaid/10.0.0/mermaid.min.css',
        'data:text/css;charset=UTF-8,.mce-accordion { border: 1px solid #ccc; margin-bottom: 10px; } .mce-accordion-title { background-color: #f0f0f0; padding: 10px; cursor: pointer; } .mce-accordion-content { padding: 10px; display: none; } .mce-flipcard { width: 200px; height: 150px; perspective: 1000px; } .mce-flipcard-inner { position: relative; width: 100%; height: 100%; transition: transform 0.8s; transform-style: preserve-3d; } .mce-flipcard-front, .mce-flipcard-back { position: absolute; width: 100%; height: 100%; backface-visibility: hidden; display: flex; align-items: center; justify-content: center; } .mce-flipcard-back { transform: rotateY(180deg); }'
    ],
    'image_advtab': True,
    'image_caption': True,
    'file_picker_types': 'file image media',
    'automatic_uploads': True,
    'paste_data_images': True,
    'relative_urls': False,
    'remove_script_host': False,
    'convert_urls': True,
    'powerpaste_word_import': 'merge',
    'powerpaste_html_import': 'merge',
    'fontsize_formats': '8pt 10pt 12pt 14pt 18pt 24pt 36pt 48pt 60pt',
    'font_formats': (
        'Arial=arial,helvetica,sans-serif; '
        'Times New Roman=times new roman,times; '
        'Comic Sans MS=comic sans ms,sans-serif; '
        'Courier New=courier new,courier; '
        'Georgia=georgia,palatino; '
        'Tahoma=tahoma,arial,helvetica,sans-serif; '
        'Verdana=verdana,geneva; Calibri=calibri,sans-serif;'
    ),
    'table_class_list': [
        {'title': 'None', 'value': ''},
        {'title': 'Bordered Table', 'value': 'table-bordered'},
        {'title': 'Striped Table', 'value': 'table-striped'},
        {'title': 'Hover Table', 'value': 'table-hover'},
        {'title': 'Table with Header', 'value': 'table-bordered table-striped'},
    ],
    'templates': [
        {'title': 'Lesson Template', 'description': 'Preformatted lesson content.', 'content': '<h2>Lesson Title</h2><p>Lesson content goes here...</p>'},
        {'title': 'Quiz Template', 'description': 'Structure for quizzes.', 'content': '<h3>Quiz Title</h3><p>Question 1:</p><ul><li>Option A</li><li>Option B</li><li>Option C</li></ul>'},
        {'title': 'Research Paper Template', 'description': 'Structure for research papers.', 'content': '<h1>Research Title</h1><h2>Abstract</h2><p>Summary of the research...</p>'},
        {'title': 'Blog Template', 'description': 'Structure for blog posts.', 'content': '<h2>Blog Title</h2><p>Blog content goes here...</p>'},
    ],
    'table_toolbar': 'tableprops cell row column deletetable mergecells splitcells',
    'toolbar_sticky': True,
    'autosave_interval': '20s',
    'autosave_restore_when_empty': True,
    'quickbars_selection_toolbar': 'bold italic | quicklink h2 h3 blockquote | checklist',
    'nonbreaking_force_tab': True,
    'importcss_append': True,
    'spellchecker_active': True,
    'spellchecker_dialog': True,
    'a11ychecker_enable': True,
    'mathjax_class': 'math-tex',
    'mathjax_config': {
        'tex': {'inlineMath': [['$', '$'], ['\\(', '\\)']]},
    },
    'mermaid': {
        'theme': 'base',
        'themeVariables': {
            'primaryColor': '#1e88e5',
            'edgeLabelBackground': '#ffffff',
            'tertiaryColor': '#c3d3e0',
        }
    },
    'button': {
        'styles': {
            'default': 'background-color: #4CAF50; color: white; padding: 10px 20px; border: none; cursor: pointer; border-radius: 4px;',
            'primary': 'background-color: #3B82F6; color: white; padding: 10px 20px; border: none; cursor: pointer; border-radius: 4px;',
            'danger': 'background-color: #EF4444; color: white; padding: 10px 20px; border: none; cursor: pointer; border-radius: 4px;',
        }
    }
}

STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
        "OPTIONS": {
            "location": BASE_DIR / "media",  # optional, where uploaded files go
        },
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    },
}
